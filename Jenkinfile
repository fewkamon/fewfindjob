pipeline {
    agent any

    environment {
        // Define variables
        DOCKER_IMAGE_FRONTEND       = 'fewfewfewfewfew/frontend:latest'
        DOCKER_IMAGE_BACKEND       = 'fewfewfewfewfew/backend:latest'
        DOCKER_CREDENTIALS = credentials('dockerhub')
    }

    stages {
        stage('Start Jenkins') {
            steps {
                // Checkout your source code from version control
             
                sh 'echo Start Jenkssins............'
                sh 'echo docker : user = $DOCKER_CREDENTIALS_USR : password = $DOCKER_CREDENTIALS_PSW'
                sh 'ls backend'
            }
        }

        stage('Build Docker Compose') {
            steps {
                script {
                    sh 'echo "Running in $(pwd)"'
                    sh 'echo start build the Docker image = $DOCKER_IMAGE'
                    sh 'docker-compose build'
                }
            }
        }

        stage('Check Docker Images') {
            steps {
                script {
                    sh 'docker images'
                }
            }
        }

        stage('Push to Docker Hub') {
            steps {
                script {
                    
                    // Login to Docker Hub
                    sh 'echo $DOCKER_CREDENTIALS_PSW | docker login --username $DOCKER_CREDENTIALS_USR --password-stdin'
                    sh 'echo start push frontend'
                    // Push the image
                    sh 'docker tag fewfindjob-web-frontend:latest $DOCKER_IMAGE_FRONTEND'
                    sh 'docker push $DOCKER_IMAGE_FRONTEND'

                    sh 'echo start push backend'
                    // Push the image
                    sh 'docker tag fewfindjob-web-backend:latest $DOCKER_IMAGE_BACKEND'
                    sh 'docker push $DOCKER_IMAGE_BACKEND'
                }
            }
        }

        stage('Clear Docker Components') {
            steps {
                script {
                    // Remove Docker images and containers
                    sh  'docker rm -f $(sudo docker ps -a -q)' 
                    sh  'docker rmi -f $(sudo docker images -q)'
                    sh  'docker volume rm $(sudo docker volume ls -q)'
                }
            }
        }


        stage('Deploy') {
            steps {
                script {
                    // Run the Docker container
                    sh 'docker-compose up -d'
                }
            }
        }
    }

    post {
        always {
            // Logout from Docker Hub
            sh 'docker logout'
        }
    }
}